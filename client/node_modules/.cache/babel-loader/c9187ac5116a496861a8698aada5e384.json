{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/akhilthomas/Desktop/blog/client/src/utils/PrivateRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  loading,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Route, { ...rest,\n  render: props => !isAuthenticated && !loading ? /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(Component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this);\n\n_c = PrivateRoute;\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  loading: PropTypes.bool\n};\n\nfunction mapStateToProps(state) {\n  const {\n    isAuthenticated,\n    loading\n  } = state.auth;\n  return {\n    isAuthenticated,\n    loading\n  };\n}\n\nexport default connect(mapStateToProps)(PrivateRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/akhilthomas/Desktop/blog/client/src/utils/PrivateRoute.js"],"names":["React","Route","Redirect","connect","PropTypes","PrivateRoute","component","Component","isAuthenticated","loading","rest","props","propTypes","bool","mapStateToProps","state","auth"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,SAAS,EAAEC,SADS;AAEpBC,EAAAA,eAFoB;AAGpBC,EAAAA,OAHoB;AAIpB,KAAGC;AAJiB,CAAD,kBAMnB,QAAC,KAAD,OACMA,IADN;AAEE,EAAA,MAAM,EAAGC,KAAD,IACN,CAACH,eAAD,IAAoB,CAACC,OAArB,gBACE,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UADF,gBAGE,QAAC,SAAD,OAAeE;AAAf;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA,QANF;;KAAMN,Y;AAkBNA,YAAY,CAACO,SAAb,GAAyB;AACvBJ,EAAAA,eAAe,EAAEJ,SAAS,CAACS,IADJ;AAEvBJ,EAAAA,OAAO,EAAEL,SAAS,CAACS;AAFI,CAAzB;;AAKA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,QAAM;AAAEP,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAA+BM,KAAK,CAACC,IAA3C;AAEA,SAAO;AACLR,IAAAA,eADK;AAELC,IAAAA;AAFK,GAAP;AAID;;AAED,eAAeN,OAAO,CAACW,eAAD,CAAP,CAAyBT,YAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  loading,\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      !isAuthenticated && !loading ? (\n        <Redirect to=\"/\" />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  loading: PropTypes.bool,\n};\n\nfunction mapStateToProps(state) {\n  const { isAuthenticated, loading } = state.auth;\n\n  return {\n    isAuthenticated,\n    loading,\n  };\n}\n\nexport default connect(mapStateToProps)(PrivateRoute);"]},"metadata":{},"sourceType":"module"}