{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const registerUser = payload => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify(payload);\n\n  try {\n    const res = await axios.post(\"http://localhost:5000/register/user\", body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    }); //   dispatch(loadUser());\n\n    dispatch(setAlert(\"User registered successfully!\", \"success\"));\n  } catch (err) {\n    const error = err.response.data;\n\n    if (error) {\n      dispatch(setAlert(error.msg, \"error\"));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/Users/akhilthomas/Desktop/blog/client/src/store/actions/auth.js"],"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","registerUser","payload","dispatch","config","headers","body","JSON","stringify","res","post","type","data","err","error","response","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,MAAM,GAAG,QAAf;AAEP,OAAO,MAAMC,YAAY,GAAIC,OAAD,IAAa,OACrCC,QADqC,KAElC;AACH,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAKA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeN,OAAf,CAAb;;AAEA,MAAI;AACF,UAAMO,GAAG,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CAChB,qCADgB,EAEhBJ,IAFgB,EAGhBF,MAHgB,CAAlB;AAKAD,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEjB,gBADC;AAEPQ,MAAAA,OAAO,EAAEO,GAAG,CAACG;AAFN,KAAD,CAAR,CANE,CAUJ;;AACET,IAAAA,QAAQ,CAACV,QAAQ,CAAC,+BAAD,EAAkC,SAAlC,CAAT,CAAR;AACD,GAZD,CAYE,OAAOoB,GAAP,EAAY;AACZ,UAAMC,KAAK,GAAGD,GAAG,CAACE,QAAJ,CAAaH,IAA3B;;AAEA,QAAIE,KAAJ,EAAW;AACTX,MAAAA,QAAQ,CAACV,QAAQ,CAACqB,KAAK,CAACE,GAAP,EAAY,OAAZ,CAAT,CAAR;AACD;;AACDb,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEhB;AADC,KAAD,CAAR;AAGD;AACF,CAhCI","sourcesContent":["import axios from \"axios\";\nimport { setAlert } from \"./alert\";\n\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\n\nexport const registerUser = (payload) => async (\n    dispatch\n  ) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const body = JSON.stringify(payload);\n  \n    try {\n      const res = await axios.post(\n        \"http://localhost:5000/register/user\",\n        body,\n        config\n      );\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n    //   dispatch(loadUser());\n      dispatch(setAlert(\"User registered successfully!\", \"success\"));\n    } catch (err) {\n      const error = err.response.data\n  \n      if (error) {\n        dispatch(setAlert(error.msg, \"error\"));\n      }\n      dispatch({\n        type: REGISTER_FAIL,\n      });\n    }\n  };\n  "]},"metadata":{},"sourceType":"module"}